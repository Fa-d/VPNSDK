// Code generated by gobind. DO NOT EDIT.

// Java class io.nekohasekai.libbox.BoxService is a proxy for talking to a Go program.
//
//   autogenerated by gobind -lang=java -javapkg=io.nekohasekai github.com/sagernet/sing-box/experimental/libbox
package io.nekohasekai.libbox;

import go.Seq;

public final class BoxService implements Seq.Proxy {
	static { Libbox.touch(); }
	
	public final int refnum;
	
	@Override public final int incRefnum() {
	      Seq.incGoRef(refnum, this);
	      return refnum;
	}
	
	BoxService(int refnum) { this.refnum = refnum; Seq.trackGoRef(refnum, this); }
	
	public BoxService() { this.refnum = __New(); Seq.trackGoRef(refnum, this); }
	
	private static native int __New();
	
	public native void close() throws Exception;
	public native boolean needWIFIState();
	public native void pause();
	public native void start() throws Exception;
	public native void wake();
	@Override public boolean equals(Object o) {
		if (o == null || !(o instanceof BoxService)) {
		    return false;
		}
		BoxService that = (BoxService)o;
		return true;
	}
	
	@Override public int hashCode() {
	    return java.util.Arrays.hashCode(new Object[] {});
	}
	
	@Override public String toString() {
		StringBuilder b = new StringBuilder();
		b.append("BoxService").append("{");
		return b.append("}").toString();
	}
}

